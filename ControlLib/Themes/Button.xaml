<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:ControlLib.Converters"
                    xmlns:assist="clr-namespace:ControlLib.Assists"
                    xmlns:controls="clr-namespace:ControlLib.Controls"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ControlLib;component/Themes/Ripple.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:RangeLengthConverter x:Key="RangeLengthConverter" />
    <converters:MathConverter x:Key="MathAddConverter" Operation="Add" />
    <system:Int32 x:Key="ProgressRingStrokeWidth">8</system:Int32>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="NormalButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryMidBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryMidBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryMidForegroundBrush}"/>
        <Setter Property="assist:RippleAssist.Feedback" Value="{DynamicResource WindowMaskBrush}" />
        <Setter Property="assist:ShadowAssist.ShadowEdges" Value="All" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="assist:ShadowAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="TextBlock.FontWeight" Value="Medium"/>
        <Setter Property="TextBlock.FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="16 4 16 4"/>
        <Setter Property="Height" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(assist:ShadowAssist.CacheMode)}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}" CornerRadius="2"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"                                    
                                        x:Name="border"
                                         >
                                    <Border.Effect>
                                        <MultiBinding Converter="{x:Static converters:ShadowConverter.Instance}">
                                            <Binding Path="(assist:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="(assist:ShadowAssist.ShadowEdges)" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </Border.Effect>
                                </Border>
                           </Grid>
                        </AdornerDecorator>
                        <controls:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"     
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Padding="{TemplateBinding Padding}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="assist:ShadowAssist.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="assist:ShadowAssist.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProcessButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryMidBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryMidBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryMidForegroundBrush}"/>
        <Setter Property="assist:RippleAssist.Feedback" Value="{DynamicResource WindowMaskBrush}" />
        <Setter Property="assist:ShadowAssist.ShadowEdges" Value="All" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="assist:ShadowAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="TextBlock.FontWeight" Value="Medium"/>
        <Setter Property="TextBlock.FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="16 4 16 4"/>
        <Setter Property="Height" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(assist:ShadowAssist.CacheMode)}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}" CornerRadius="2"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"                                    
                                        x:Name="border"
                                         >
                                    <Border.Effect>
                                        <MultiBinding Converter="{x:Static converters:ShadowConverter.Instance}">
                                            <Binding Path="(assist:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="(assist:ShadowAssist.ShadowEdges)" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </Border.Effect>
                                </Border>
                                <Border HorizontalAlignment="Left" Background="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(assist:ButtonProgressAssist.IndicatorBackground)}" Opacity=".4">
                                    <Border.Width>
                                        <MultiBinding Converter="{StaticResource RangeLengthConverter}">
                                            <Binding Path="(assist:ButtonProgressAssist.Minimum)" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="(assist:ButtonProgressAssist.Maximum)" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="(assist:ButtonProgressAssist.Value)" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ButtonBase}}" />
                                        </MultiBinding>
                                    </Border.Width>
                                </Border>
                            </Grid>
                        </AdornerDecorator>
                        <ContentControl Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"     
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Padding="{TemplateBinding Padding}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="assist:ShadowAssist.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="assist:ShadowAssist.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>